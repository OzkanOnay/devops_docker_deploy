name: Build & Deploy to DigitalOcean

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: DIGITAL_OCEAN
    steps:
      - name: Repo'yu klonla
        uses: actions/checkout@v3

      - name: Java kurulumu
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Maven ile build
        run: mvn clean package -DskipTests

      - name: Git SHA al
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker image build & push
        run: |
          IMAGE_TAG=${{ steps.vars.outputs.sha_short }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-java-app:$IMAGE_TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-java-app:$IMAGE_TAG
          echo "image_tag=${{ secrets.DOCKER_USERNAME }}/my-java-app:$IMAGE_TAG" >> $GITHUB_ENV

      - name: SSH key'i ayarla
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.TARGET_HOST }} >> ~/.ssh/known_hosts

      - name: Ansible kurulumu
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install ansible
          ansible-galaxy collection install community.docker

      - name: Inventory oluştur
        run: |
          echo "[target]" > ansible/inventory.ini
          echo "${{ secrets.TARGET_HOST }} ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_ed25519" >> ansible/inventory.ini

      - name: Ansible playbook'u çalıştır
        run: |
          cd ansible
          ansible-playbook -i inventory.ini deploy.yml --extra-vars "docker_image=$image_tag"
